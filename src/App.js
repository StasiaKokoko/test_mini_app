import { motion, AnimatePresence } from 'framer-motion';
import { useState, useEffect } from 'react';

function App() {
  const [currentPage, setCurrentPage] = useState('home');

  useEffect(() => {
    try {
      window.Telegram.WebApp.expand();
    } catch (e) {
      console.log('Not in Telegram');
    }
  }, []);

  const mainStyle = {
    position: 'fixed',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    width: '100%',
    height: '100vh',
    overflow: 'hidden',
    touchAction: 'none',
    backgroundImage: 'linear-gradient(-45deg, #60a5fa, #3b82f6, #818cf8, #8b5cf6, #3b82f6)',
    backgroundSize: '400% 400%',
    animation: 'gradient 15s ease infinite'
  };

  const buttonStyle = {
    padding: '20px 40px',
    fontSize: '18px',
    borderRadius: '15px',
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
    color: '#ffffff',
    cursor: 'pointer',
    backdropFilter: 'blur(10px)',
    border: '1px solid rgba(0, 0, 0, 0.1)',
    boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',
  };

  const handleShowAlert = () => {
    try {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
      setCurrentPage('poem');
    } catch (e) {
      setCurrentPage('poem');
    }
  };

  const handleShare = () => {
    try {
      if (window.Telegram && window.Telegram.WebApp) {
        const url = encodeURIComponent('https://yourapp.com');
        const text = encodeURIComponent('–Ø –ø—Ä–æ—Ö–æ–∂—É –∫–ª–∞—Å—Å–Ω—ã–π —Ç–µ—Å—Ç –≤ —ç—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!');
        const shareUrl = `https://t.me/share/url?url=${url}&text=${text}`;

        const tg = window.Telegram.WebApp;
        tg.openTelegramLink(shareUrl);
      } else {
        alert("–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ Telegram");
      }
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞:', e);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  };

  const checkWebApp = () => {
    try {
      if (window.Telegram.WebApp) {
        alert(`WebApp –¥–æ—Å—Ç—É–ø–µ–Ω! 
              –í–µ—Ä—Å–∏—è: ${window.Telegram.WebApp.version}
              –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${window.Telegram.WebApp.platform}`);
        console.log('WebApp –æ–±—ä–µ–∫—Ç:', window.Telegram.WebApp);
      } else {
        alert('WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ WebApp:', e);
      alert('WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
  };

  return (
    <div style={mainStyle}>
      <AnimatePresence initial={false} mode="wait">
        {currentPage === 'home' ? (
          <div className="h-full flex flex-col items-center justify-center gap-4 overflow-hidden touch-none select-none">
            <motion.div
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{
                duration: 0.5,
                ease: "easeOut"
              }}
              className="mb-8 text-center"
            >
              <h1 style={{
                color: '#ffffff',
                fontSize: '2.25rem',
                fontWeight: 'bold',
                textShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'
              }}>
                ‚ú® –í–æ–ª—à–µ–±–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚ú®
              </h1>
            </motion.div>

            <motion.button
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{
                duration: 0.5,
                delay: 0.2,
                ease: "easeOut"
              }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              onClick={handleShowAlert}
              style={buttonStyle}
            >
              ‚ú® –ù–∞–∂–º–∏ –º–µ–Ω—è
            </motion.button>

            <motion.button
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{
                duration: 0.5,
                delay: 0.3,
                ease: "easeOut"
              }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              onClick={handleShare}
              style={buttonStyle}
            >
              üåü –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
            </motion.button>
          </div>
        ) : (
          <div className="h-full p-6">
            <motion.button
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.3 }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              onClick={() => setCurrentPage('home')}
              className={`mb-6 px-6 py-3 text-white bg-white/10 backdrop-blur-lg rounded-xl 
                       border border-white/20 shadow-lg`}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </motion.button>

            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
              className={`h-[calc(100%-80px)] overflow-y-auto rounded-xl 
                       bg-black/5 backdrop-blur-xl p-6`}
            >
              <p className={`text-lg leading-relaxed whitespace-pre-line text-white`}>
                –Ø –ø–æ–º–Ω—é —á—É–¥–Ω–æ–µ –º–≥–Ω–æ–≤–µ–Ω—å–µ:
                –ü–µ—Ä–µ–¥–æ –º–Ω–æ–π —è–≤–∏–ª–∞—Å—å —Ç—ã,
                –ö–∞–∫ –º–∏–º–æ–ª–µ—Ç–Ω–æ–µ –≤–∏–¥–µ–Ω—å–µ,
                –ö–∞–∫ –≥–µ–Ω–∏–π —á–∏—Å—Ç–æ–π –∫—Ä–∞—Å–æ—Ç—ã.

                –í —Ç–æ–º–ª–µ–Ω—å—è—Ö –≥—Ä—É—Å—Ç–∏ –±–µ–∑–Ω–∞–¥–µ–∂–Ω–æ–π,
                –í —Ç—Ä–µ–≤–æ–≥–∞—Ö —à—É–º–Ω–æ–π —Å—É–µ—Ç—ã,
                –ó–≤—É—á–∞–ª –º–Ω–µ –¥–æ–ª–≥–æ –≥–æ–ª–æ—Å –Ω–µ–∂–Ω—ã–π
                –ò —Å–Ω–∏–ª–∏—Å—å –º–∏–ª—ã–µ —á–µ—Ä—Ç—ã.
              </p>
            </motion.div>
          </div>
        )}
      </AnimatePresence>
    </div>
  );
}

export default App;