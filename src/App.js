import { motion } from 'framer-motion';
import WebApp from '@twa-dev/sdk';
import './App.css';

function App() {
  const handleShowAlert = () => {
    try {
      WebApp.showAlert('–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ');
    } catch (e) {
      alert('–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ (–ù–æ –º—ã –Ω–µ –≤ Telegram)');
    }
  };

  const handleShowPopup = () => {
    try {
      WebApp.showPopup({
        title: '–ü—Ä–∏–≤–µ—Ç!',
        message: '–≠—Ç–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ Telegram',
        buttons: [
          {text: '–°—É–ø–µ—Ä!', type: 'ok'},
          {text: '–ó–∞–∫—Ä—ã—Ç—å', type: 'close'}
        ]
      });
    } catch (e) {
      alert('–í –±—Ä–∞—É–∑–µ—Ä–µ —ç—Ç–æ –±—ã–ª–æ –±—ã –∫—Ä–∞—Å–∏–≤–æ–µ –æ–∫–Ω–æ Telegram üòâ');
    }
  };

  const handleHapticFeedback = () => {
    try {
      WebApp.HapticFeedback.impactOccurred('heavy');
    } catch (e) {
      console.log('–í–∏–±—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ Telegram');
    }
  };

  return (
    <div className="App">
      <motion.div
        initial={{ y: -100, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.8, type: "spring" }}
      >
        <h1>–ü—Ä–∏–≤–µ—Ç, Telegram!</h1>
      </motion.div>

      <motion.div
        style={{ display: 'flex', gap: '20px', flexDirection: 'column' }}
      >
        <motion.button
          whileHover={{ scale: 1.1 }}
          whileTap={{ scale: 0.9 }}
          onClick={handleShowAlert}
          style={{
            padding: '20px 40px',
            fontSize: '18px',
            border: 'none',
            borderRadius: '10px',
            backgroundColor: '#0088cc',
            color: 'white',
            cursor: 'pointer'
          }}
        >
          –ü–æ–∫–∞–∑–∞—Ç—å Alert
        </motion.button>

        <motion.button
          whileHover={{ scale: 1.1, rotate: 5 }}
          whileTap={{ scale: 0.9 }}
          onClick={handleShowPopup}
          style={{
            padding: '20px 40px',
            fontSize: '18px',
            border: 'none',
            borderRadius: '10px',
            backgroundColor: '#179cde',
            color: 'white',
            cursor: 'pointer'
          }}
        >
          –û—Ç–∫—Ä—ã—Ç—å Popup
        </motion.button>

        <motion.button
          whileHover={{ 
            scale: 1.1,
            boxShadow: '0px 0px 8px rgb(255,255,255)' 
          }}
          whileTap={{ scale: 0.9 }}
          onClick={handleHapticFeedback}
          style={{
            padding: '20px 40px',
            fontSize: '18px',
            border: 'none',
            borderRadius: '10px',
            backgroundColor: '#27a7f7',
            color: 'white',
            cursor: 'pointer'
          }}
        >
          –í–∏–±—Ä–∞—Ü–∏—è
        </motion.button>
      </motion.div>

      <motion.div
        style={{ 
          position: 'fixed', 
          bottom: '20px',
          fontSize: '12px',
          opacity: 0.7 
        }}
        initial={{ opacity: 0 }}
        animate={{ opacity: 0.7 }}
        transition={{ delay: 1 }}
      >
        –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      </motion.div>
    </div>
  );
}

export default App;
